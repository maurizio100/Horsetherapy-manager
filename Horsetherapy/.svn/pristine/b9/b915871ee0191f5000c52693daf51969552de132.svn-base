package sepm.ss13.e0828.test;

import static org.junit.Assert.*;

import org.junit.After;
import org.junit.Before;
import org.junit.Test;

import sepm.ss13.e0828.domain.Horse;
import sepm.ss13.e0828.domain.HorseQueryData;
import sepm.ss13.e0828.domain.Horse.Therapytype;
import sepm.ss13.e0828.service.HorseValidator;

public class HorseValidatorTest {

	private Horse testHorse = null;
	private HorseValidator validator = null;
	private HorseQueryData testquery = null;
	
	@Before
	public void setUp(){
		testHorse = new Horse();
		
		testHorse.setHorseName("Speedy");
		testHorse.setHorseTherapyprice(20.0f);
		testHorse.setHorseTherapytype(Therapytype.HIPPOTHERAPIE);
		testHorse.setHorsePhoto("pics/speedy.jpg");
		
		testquery = new HorseQueryData();
		validator = new HorseValidator();
	}
	
	@After
	public void tearDowN(){
		testHorse= null;
		validator = null;
		testquery = null;
		
	}
	
	@Test
	public void testHorseValidationCorrect() {
		boolean result = validator.validateHorse(testHorse);
		assertTrue(result);
	}
	
	@Test
	public void testHorseValidationPictureMissing() {
		testHorse.setHorsePhoto(null);
		boolean result = validator.validateHorse(testHorse);
		assertFalse(result);
	}
	
	@Test
	public void testHorseValidationPriceLowerZero() {
		float price = testHorse.getHorseTherapyprice();
		testHorse.setHorseTherapyprice( price * (-1) );
		boolean result = validator.validateHorse(testHorse);
		assertFalse(result);
	}
	
	@Test
	public void testUpdateValuesCorrect(){
		testquery.setHorseID(10);
		testquery.setHorsePhoto("pics/speedy.png");
		boolean result = validator.validateHorseupdate(testquery);
		assertTrue(result);
	}
	
	@Test
	public void testUpdateValuesNoValue(){
		testquery = null;
		boolean result = validator.validateHorseupdate(testquery);
		assertFalse(result);
	}
	
	
	@Test
	public void testDeleteValuesCorrect(){
		testquery.setHorseID(10);
		boolean result = validator.validateHorsedelete(testquery);
		assertTrue(result);
	}

	@Test
	public void testDeleteValuesNoValue(){
		testquery = null;
		boolean result = validator.validateHorsedelete(testquery);
		assertFalse(result);
	}
	
	
}
