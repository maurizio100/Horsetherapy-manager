package sepm.ss13.e0828.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.LinkedList;
import java.util.List;

import sepm.ss13.e0828.domain.Horse;
import sepm.ss13.e0828.domain.HorseSearch;
import sepm.ss13.e0828.domain.Invoice;
import sepm.ss13.e0828.domain.Therapytype;

public class DBInvoiceDAO implements InvoiceDAO {


	private PreparedStatement pstmt = null;

	private String createStmt = "Insert into Insert into Invoice(invoice_id, invoice_date, invoice_clientfname, invoice_clientsname, invoice_address, invoice_postcode, invoice_place) " +
			"Values(next value for seq_invoice,now,?,?,?,?,?);";
	private String getStmt = "Select * from invoice order by invoice_date;";


	@Override
	public boolean createInvoice(Invoice newInvoice) {
		Connection conn = Connector.getConnection();
		boolean executed = false;
		try {
			pstmt = conn.prepareStatement(createStmt);
			pstmt.setString(1, newInvoice.getInvoiceClientfirstname());
			pstmt.setString(2, newInvoice.getInvoiceClientsurname());
			pstmt.setString(3, newInvoice.getInvoiceAddress());
			pstmt.setString(4, newInvoice.getInvoicePostcode());
			pstmt.setString(5, newInvoice.getInvoicePlace());
			executed = pstmt.execute();
			pstmt.close();

		} catch (SQLException e) {
			if (pstmt != null ){
				if( !executed ){
					//TODO parameter index was not right or a connection error
				}else{
					//TODO execution error
				}
				System.err.println("didnt work!");
				
				try { pstmt.close();} 
				catch (SQLException e1) { e1.printStackTrace(); }
			}
			e.printStackTrace();
		}		

		pstmt = null;
		Connector.closeConnection();
		return executed;
	}

	@Override
	public List<Invoice> getInvoices() {
		Connection conn = Connector.getConnection();
		ResultSet rs = null;
		List<Invoice> retList = null;
		Invoice i = null;
		String query = "";
		query = getStmt; 
	
		
		try{
			pstmt = conn.prepareStatement(query);
			rs = pstmt.executeQuery();

			if( rs != null ){
				retList = new LinkedList<Invoice>();

				while( rs.next() ){
					i = new Invoice();
					i.setInvoiceID(rs.getInt(1));
					i.setInvoiceDate(rs.getDate(2));
					i.setInvoiceClientfirstname(rs.getString(3));
					i.setInvoiceClientsurname(rs.getString(4));
					i.setInvoiceAddress(rs.getString(5));
					i.setInvoicePlace(rs.getString(6));
					i.setInvoicePostcode(rs.getString(7));
					retList.add(i);
				}

			}

			rs.close();
			pstmt.close();
		}catch ( SQLException e ){
			//TODO error for something went wrong
		}

		Connector.closeConnection();
		return retList;
	}

}
