package sepm.ss13.e0828.service;

import sepm.ss13.e0828.domain.Horse;
import sepm.ss13.e0828.domain.HorseQueryData;
import sepm.ss13.e0828.domain.Horse.Therapytype;

public class InvoiceValidator {

	public boolean validateHorse(Horse vHorse){
		boolean horsevalid = true;
		
		if( vHorse == null ) return (horsevalid = false);

		String horsePhoto = vHorse.getHorsePhoto();
		String horseName = vHorse.getHorseName();
		float horseTherapyprice = vHorse.getHorseTherapyprice();
		Therapytype horseTherapytype = vHorse.getHorseTherapytype();
		
		if( horsePhoto == null || horsePhoto.isEmpty() ) horsevalid = false;
		if( horseName == null || horseName.isEmpty() ) horsevalid = false;
		if( horseTherapyprice <= 0  ) horsevalid = false;
		if( horseTherapytype == null ) horsevalid = false;
		
		return horsevalid;		
	}
	
	public boolean validateHorseupdate(HorseQueryData queryValues){
		boolean validQuery = false;
		
		if( queryValues == null ) return (validQuery = false);
		
		Object[] vals = queryValues.getValues();

		for( int i = 0; i < vals.length; i++ ){
			if( vals[i] != null ) return (validQuery = true);
		}
		
		return validQuery;
	}
	
	public boolean validateHorsedelete(HorseQueryData delValues){
		if( delValues == null ) return false;
		return delValues.getHorseID() < 0;
	}

	public boolean validateHorseTherapySelection(HorseQueryData therapyType) {
		if( therapyType == null ) return false;
		String therapy = therapyType.getTherapytype(); 
		return (therapy != null && therapy.isEmpty());
	}
}
